<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--FactoryBean是Spring提供的一个接口，只要是这个接口的实现类，Spring都认为是一个工厂-->
    <bean id="airPlaneFactoryBean" class="com.kapcb.ccc.factory.AirPlaneFactoryBean"/>

    <!--实例工厂-->
    <!--首先创建一个工厂bean-->
    <bean id="airPlaneInstanceFactory" class="com.kapcb.ccc.factory.AirPlaneInstanceFactory"/>
    <!--创建 airPlane 的bean-->
    <!--factory-bean="airPlaneInstanceFactory" 指定当前对象创建使用哪个工厂-->
    <!--factory-method="getAirplane" 指定工厂的方法-->
    <bean id="airPlaneInstance" class="com.kapcb.ccc.domian.AirPlane" factory-bean="airPlaneInstanceFactory"
          factory-method="getAirPlane">
        <!--constructor-arg 传参,传入getAirPlane方法所需的参数-->
        <constructor-arg name="planeName" value="Boeing 747"/>
    </bean>


    <!--静态工厂-->
    <!--静态工厂不需要创建工厂本身-->
    <!--class：指定静态工厂全类名 factory-method：指定工厂方法 constructor-arg：传参-->
    <!--如果只写factory-method="getAirPlane"会飘红，因为当前方法需要传参，可以使用构造器进行传参-->
    <bean id="airPlaneStaticInstanceFactory" class="com.kapcb.ccc.factory.AirPlaneStaticInstanceFactory"
          factory-method="getAirPlane">
        <constructor-arg name="planeName" value="Boeing 757"/>
    </bean>
</beans>