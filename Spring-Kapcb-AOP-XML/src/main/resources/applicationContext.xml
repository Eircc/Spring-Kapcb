<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1.将目标类和切面类都加入到容器中 相当于 @Component-->
    <!--2.告诉Spring那个是切面类 @Aspect-->
    <!--3.在切面类中使用得五个通知注解来配置切面中得这些通知方法都是何时何地运行-->
    <!--4.开启基于注解的AOP功能,使用aop名称空间-->

    <!--1.将目标类和切面类都加入到容器中 相当于 @Component-->
    <bean id="calculator" class="com.kapcb.ccc.service.impl.CalculatorImpl"></bean>
    <bean id="logUtil" class="com.kapcb.ccc.util.LogUtil"></bean>

    <!--需要使用aop名称空间-->
    <aop:config>

        <aop:pointcut id="allMethod" expression="execution(public int com.kapcb.ccc.service.impl.*.*(..))"/>
        <!--指定切面@Aspect-->
        <!--2.告诉Spring那个是切面类 @Aspect-->
        <aop:aspect ref="logUtil">
            <!--当前切面能用-->
            <aop:pointcut id="method" expression="execution(public int com.kapcb.ccc.service.impl.*.*(..))"/>
            <!--3.在切面类中使用得五个通知注解来配置切面中得这些通知方法都是何时何地运行-->
            <aop:before method="logBefore" pointcut-ref="method"></aop:before>
            <aop:after method="logAfter" pointcut-ref="method"></aop:after>
            <!--returning="result"指定返回值-->
            <aop:after-returning method="logEnd" pointcut-ref="method" returning="result"></aop:after-returning>
            <!--throwing="exception"指定抛出异常-->
            <aop:after-throwing method="logException" pointcut-ref="method" throwing="exception"></aop:after-throwing>
        </aop:aspect>
    </aop:config>

</beans>