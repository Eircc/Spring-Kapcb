<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="car01" class="com.kapcb.ccc.bean.Car">
        <property name="carName" value="保时捷"></property>
        <property name="color" value="红色"></property>
        <property name="price" value="20"></property>
    </bean>

    <!--正确的为各种属性赋值-->
    <!--默认注册不进行赋值就是属性值为null-->
    <bean id="person01" class="com.kapcb.ccc.bean.Person">
        <property name="age" value="18"></property>
        <property name="gender" value="男"></property>
        <!--为 lastName 赋值为 null-->
        <!--进行复杂的赋值都是在 property 标签体中进行的-->
        <property name="lastName">
            <null/>
        </property>
        <property name="email" value="123456@qq.com"></property>
        <!--使用引用进行复杂赋值-->
        <!--当进行引用赋值时，这是一个严格意义上的引用，与上面bean标签中声明的car01是同一个对象-->
        <!--        <property name="car" ref="car01"></property>-->
        <property name="car">
            <!--在内部使用bean标签进行创建 相当于 Car car = new Car();-->
            <bean class="com.kapcb.ccc.bean.Car">
                <property name="price" value="20"></property>
                <property name="color" value="蓝色"></property>
                <property name="carName" value="卡宴"></property>
            </bean>
        </property>
    </bean>

    <bean id="book01" class="com.kapcb.ccc.bean.Book">
        <property name="author" value="吴承恩"></property>
        <property name="bookName" value="西游记"></property>
    </bean>

    <!--为List属性赋值-->
    <bean id="person02" class="com.kapcb.ccc.bean.Person">
        <!--list = new ArrayLis<T>();-->
        <property name="books">
            <!--在list标签体中添加每一个元素-->
            <list>
                <!--相当于重新 book = new ArrayList<Book>();-->
                <!--内部 bean 标签 写id与不写id效果一样，不会被外界获取到，只能供内部使用-->
                <bean class="com.kapcb.ccc.bean.Book">
                    <property name="bookName" value="三国志"></property>
                    <property name="author" value="1111"></property>
                </bean>

                <!--引用外部一个元素-->
                <ref bean="book01"/>
            </list>
        </property>
    </bean>

    <!--为Map<String,Object>赋值-->
    <bean id="person03" class="com.kapcb.ccc.bean.Person">
        <property name="maps">
            <!--相当于 maps = new LinkedHashMap<String,Object>();-->
            <map>
                <!--一个entry代表一个键值对-->
                <entry key="key01" value="张三"></entry>
                <entry key="key02" value="18"></entry>
                <!--map中有一个Car类型的属性-->
                <entry key="key03" value-ref="book01"></entry>
                <entry key="key04">
                    <bean class="com.kapcb.ccc.bean.Car">
                        <property name="carName" value="保时捷"></property>
                    </bean>
                </entry>
                <!--map中还有一个map-->
                <entry key="key05">
                    <map></map>
                </entry>
            </map>
        </property>
    </bean>

    <!--为 properties 类型属性赋值-->
    <bean id="person04" class="com.kapcb.ccc.bean.Person">
        <property name="properties">
            <!--相当于 properties = new Properties();-->
            <props>
                <prop key="username">kapcb</prop>
                <prop key="password">123456</prop>
            </props>
        </property>
    </bean>

    <bean id="person05" class="com.kapcb.ccc.bean.Person">
        <property name="maps" ref="myMap"></property>
    </bean>

    <!--相当于new LinkedHashMap<>();-->
    <util:map id="myMap">
        <!--直接添加元素即可-->
        <entry key="key01" value="张三"></entry>
        <entry key="key02" value="18"></entry>
        <!--map中有一个Car类型的属性-->
        <entry key="key03" value-ref="book01"></entry>
        <entry key="key04">
            <bean class="com.kapcb.ccc.bean.Car">
                <property name="carName" value="保时捷"></property>
            </bean>
        </entry>
    </util:map>


    <!--级联属性-->
    <bean id="person06" class="com.kapcb.ccc.bean.Person">
        <!--为Car属性赋值的时候修改 price价格-->
        <property name="car" ref="car01"></property>
        <!--属性点属性即可-->
        <property name="car.price" value="50"></property>
    </bean>


    <bean id="person07" class="com.kapcb.ccc.bean.Person" abstract="true">
        <property name="age" value="18"></property>
        <property name="gender" value="男"></property>
        <property name="lastName" value="kapcb"></property>
        <property name="email" value="eircccallroot@163.com"></property>
    </bean>

    <bean id="person08" class="com.kapcb.ccc.bean.Person" parent="person07">
        <property name="lastName" value="ccc"></property>
    </bean>


</beans>